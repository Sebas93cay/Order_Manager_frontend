{"version":3,"sources":["Context/AppContext.js","components/Header/index.js","components/Welcome/index.js","components/Forms/Login/index.js","components/Forms/Signup/index.js","components/Dashboard/index.js","components/Table/index.js","components/Clients/index.js","components/ModalNew/index.js","components/Forms/NewOrder/index.js","components/test/index.js","components/Forms/ModalEditClient/index.js","components/Forms/ModalEditOrder/index.js","components/LoadingSpinner/index.js","components/Orders/Orders/index.js","components/Orders/AllOrders/index.js","components/Orders/ClientOrders/index.js","components/ShippingInfo/FormEditShipping/index.js","components/ShippingInfo/index.js","components/Payments/index.js","components/Forms/SearchModal/index.js","components/App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Provider","children","navigate","useNavigate","useState","userName","setUserName","localStorage","getItem","token","setToken","showSidebar","setShowSidebar","mobileView","setMobileView","showNewOrderModal","setShowNewOrderModal","showEditClientModal","setShowEditClientModal","clients","setClients","orders","setOrders","clientToEdit","setClientToEdit","orderToEdit","setOrderToEdit","showSpinner","setShowSpinner","showEditOrderModal","setShowEditOrderModal","ordersToFetch","setOrdersToFetch","showShippingInfo","setShowShippingInfo","showPayments","setShowPayments","showSearchModal","setShowSearchModal","updateItems","url","setter","Promise","resolve","fetchAll","then","res","status","logout","items","msg","checkMobile","window","innerWidth","addEventListener","useEffect","deleteItem","id","a","opts","method","headers","Authorization","checkFetch","state","json","response","console","log","undefined","createClient","name","lastname","govid","email","company","data","last_name","gov_id","body","JSON","stringify","fetch","client","searchOrders","searchType","orderId","startDate","endDate","city","country","generateURL","title","endpoint","params","URL","search","URLSearchParams","createOrder","clientToCreate","order","client_id","createPayment","payment","createShipping","shipping","login","password","alert","setItem","access_token","user","editItem","item","signup","removeItem","value","checkUser","tok","Header","useContext","className","to","Fragment","onClick","Welcome","Login","onSubmit","event","preventDefault","target","htmlFor","type","placeholder","required","Signup","Dashboard","colClass","Table","columns","tableHooks","columnOrder","tableInstance","useTable","initialState","useSortBy","useColumnOrder","useFlexLayout","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Clients","useMemo","Object","keys","key","accessor","hooks","visibleColumns","push","width","Cell","values","lastName","govId","ModalNew","elementId","setShowModal","ReactDOM","createPortal","document","getElementById","NewOrder","deliverState","setDeliverState","clientType","setClientType","payments","setPayments","setShipping","subtotal","taxes","prices","setPrices","newPrices","reduce","total","checkDebth","updatePrices","price","isNaN","orderSubmited","form","paid","clienttype","forEach","order_id","address","cost","delivered","checked","length","onChange","parseInt","addPayment","newPayment","pop","removePayment","pIdx","updatePaymentType","updatePaymentTotal","disabled","Test","ModalEditClient","setMsg","defaultValue","readOnly","style","color","ModalEditOrder","LoadingSpinner","Orders","filter","includes","AllOrders","ClientOrders","clientId","useParams","FormEditShipping","shipping_info","action","submitShipping","shipping_id","defaultChecked","ShippingInfo","addShippingInfo","setAddShippingInfo","Payments","addingPayment","setAddingPayment","header","submitPayment","paymenttype","paymenttotal","SearchModal","setSearchType","submitSearch","App","path","element","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.a84416a6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Context = React.createContext();\n\nfunction Provider({ children }) {\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [mobileView, setMobileView] = useState(true);\n  const [showNewOrderModal, setShowNewOrderModal] = useState(false);\n  const [showEditClientModal, setShowEditClientModal] = useState(false);\n  const [clients, setClients] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [clientToEdit, setClientToEdit] = useState({});\n  const [orderToEdit, setOrderToEdit] = useState({});\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showEditOrderModal, setShowEditOrderModal] = useState(false);\n  const [ordersToFetch, setOrdersToFetch] = useState({});\n  const [showShippingInfo, setShowShippingInfo] = useState(false);\n  const [showPayments, setShowPayments] = useState(false);\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const updateItems = (url, setter) => {\n    return new Promise((resolve) => {\n      setShowSpinner(true);\n      fetchAll(url).then((res) => {\n        if (res.status !== 200 && res.status !== 404) {\n          setShowNewOrderModal(false);\n          setShowSidebar(false);\n          logout();\n          navigate(\"/login\");\n        }\n        setter(res.items || []);\n        setShowSpinner(false);\n        resolve({ msg: \"item updated\" });\n      });\n    });\n  };\n\n  const checkMobile = () => {\n    if (window.innerWidth <= 1000) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n  };\n\n  window.addEventListener(\"resize\", checkMobile);\n  useEffect(() => checkMobile(), []);\n\n  const deleteItem = async (id) => {\n    const opts = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n      },\n    };\n    try {\n      let res = await checkFetch(\n        \"http://localhost:5000/api/v1/delete/\" + id,\n        opts\n      );\n      if (res.status !== 200) {\n        return { state: false, status: res.status, msg: res.msg };\n      }\n      let response = await res.json();\n      return {\n        state: true,\n        status: res.status,\n        msg: response.msg,\n      };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return { state: false, status: undefined, msg: error };\n    }\n  };\n\n  const createClient = async ({ name, lastname, govid, email, company }) => {\n    const data = { name, last_name: lastname, gov_id: govid, email, company };\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(data),\n    };\n    try {\n      let res = await fetch(\"http://localhost:5000/api/v1/createclient\", opts);\n      if (res.status !== 200) {\n        return { state: false, status: res.status, msg: res.msg };\n      }\n      let response = await res.json();\n      return {\n        state: true,\n        status: res.status,\n        msg: response.msg,\n        client: response.client,\n      };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return { state: false, status: undefined, msg: error };\n    }\n  };\n\n  const searchOrders = async (\n    searchType,\n    { orderId, startDate, endDate, city, state, country }\n  ) => {\n    let url = null;\n    let title;\n    console.log(\"the search type is\", searchType);\n    switch (searchType) {\n      case \"by-id\":\n        url = generateURL(\"orders/\" + orderId);\n        title = \"Order by Id\";\n        break;\n      case \"by-date\":\n        url = generateURL(\"orders/\" + startDate + \" - \" + endDate);\n        title = `Orders between ${startDate} and ${endDate}`;\n        break;\n      case \"by-location\":\n        url = generateURL(\"orders/shipping\", { city, state, country });\n        title = `Orders in ${city} ${state} ${country}`;\n        break;\n    }\n    setOrdersToFetch({ url: url, title: title });\n    await updateItems(url, setOrders);\n    setShowSearchModal(false);\n    navigate(\"/search\");\n  };\n\n  const generateURL = (endpoint, params = null) => {\n    const url = new URL(\"http://localhost:5000/api/v1/\" + endpoint);\n    if (params) {\n      url.search = new URLSearchParams(params);\n    }\n    return url;\n  };\n\n  const createOrder = async (clientToCreate, order) => {\n    if (clientToCreate) {\n      const res = await createClient(clientToCreate);\n      if (res.state) {\n        order.client_id = res.client.id;\n      } else {\n        order.client_id = undefined;\n      }\n    }\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(order),\n    };\n    try {\n      let res = await fetch(\"http://localhost:5000/api/v1/createorder\", opts);\n      if (res.status !== 200) {\n        res = await res.json();\n        return {\n          state: false,\n          status: res.status,\n          msg: res.msg,\n          order: null,\n        };\n      }\n      res = await res.json();\n      return {\n        state: true,\n        status: res.status,\n        msg: res.msg,\n        order: res.order,\n      };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return { state: false, status: undefined, msg: error };\n    }\n  };\n\n  const createPayment = async (payment) => {\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(payment),\n    };\n    try {\n      let res = await checkFetch(\n        \"http://localhost:5000/api/v1/createpayment\",\n        opts\n      );\n      if (res.status !== 200) {\n        return { state: false, status: res.status, msg: res.msg };\n      }\n      return { state: true, status: res.status, msg: res.msg };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return { state: false, status: undefined, msg: error };\n    }\n  };\n\n  const createShipping = async (shipping) => {\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(shipping),\n    };\n    try {\n      let res = await fetch(\n        \"http://localhost:5000/api/v1/createshipping\",\n        opts\n      );\n      if (res.status !== 200) {\n        res = await res.json();\n        return { state: false, status: res.status, msg: res.msg };\n      }\n      res = await res.json();\n      return { state: true, status: res.status, msg: res.msg };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return { state: false, status: undefined, msg: error };\n    }\n  };\n\n  const checkFetch = async (url, opts) => {\n    const res = await fetch(url, opts);\n    if (res.status === 401 || res.status === 422) {\n      setShowNewOrderModal(false);\n      setShowEditClientModal(false);\n      setShowEditOrderModal(false);\n      setShowShippingInfo(false);\n      setShowSpinner(false);\n      setShowPayments(false);\n      setShowSearchModal(false);\n      logout();\n      navigate(\"/login\");\n    }\n    // if (res.status !== 200) {\n    //   alert('something went wrong status code :'+res.status)\n    // }\n    return res;\n  };\n\n  const login = async (email, password) => {\n    const data = {\n      email: email,\n      password: password,\n    };\n\n    // console.log(JSON.stringify(data));\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n    try {\n      let res = await fetch(\"http://localhost:5000/api/v1/login\", opts);\n      if (res.status === 401) {\n        alert(\"Wrong password or email\");\n        return false;\n      }\n      if (res.status !== 200) {\n        alert(`Something wrong happened, status code is ${res.status}`);\n        return false;\n      }\n      res = await res.json();\n      localStorage.setItem(\"token\", res.access_token);\n      localStorage.setItem(\"userName\", res.user.name);\n      setUserName(res.user.name);\n      setToken(res.access_token);\n      return true;\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n    }\n  };\n\n  const editItem = async (item, endpoint) => {\n    const opts = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(item),\n    };\n    try {\n      let res = await checkFetch(\n        \"http://localhost:5000/api/v1/\" + endpoint,\n        opts\n      );\n      if (res.status !== 200) {\n        const status = res.status;\n        res = await res.json();\n        return { status: status, res: res };\n      }\n      res = await res.json();\n      return { status: 200, msg: res.msg };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return {\n        state: false,\n        status: undefined,\n        msg: error,\n        res: undefined,\n        items: [],\n      };\n    }\n  };\n\n  const signup = async (name, email, password) => {\n    const data = {\n      name: name,\n      email: email,\n      password: password,\n    };\n    // console.log(JSON.stringify(data));\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n    try {\n      let res = await fetch(\"http://localhost:5000/api/v1/signup\", opts);\n      if (res.status === 405) {\n        alert(\"There is an user with that email already\");\n        return false;\n      }\n      if (res.status !== 200) {\n        alert(`Something wrong happened, status code is ${res.status}`);\n        return false;\n      }\n      res = await res.json();\n      localStorage.setItem(\"token\", res.access_token);\n      localStorage.setItem(\"userName\", res.user.name);\n      setUserName(res.user.name);\n      setToken(res.access_token);\n      return true;\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n    }\n  };\n\n  const checkUser = () => {\n    const name = localStorage.getItem(\"userName\");\n    setUserName(name);\n    const tok = localStorage.getItem(\"token\");\n    setToken(tok);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"userName\");\n    localStorage.removeItem(\"token\");\n    setUserName(null);\n    setToken(null);\n  };\n\n  const fetchAll = async (url) => {\n    setToken(localStorage.getItem(\"token\"));\n    const opts = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    };\n    try {\n      let res = await checkFetch(url, opts);\n      if (res.status !== 200) {\n        const status = res.status;\n        res = await res.json();\n        // alert(\n        //   `Something wrong happened, status code is ${status} \\nmsg: ${res.msg}`\n        // );\n        return { status: status, res: res, items: [] };\n      }\n      res = await res.json();\n      return { status: 200, items: res };\n    } catch (error) {\n      console.log(\"There was a tragic error\", error);\n      return {\n        state: false,\n        status: undefined,\n        msg: error,\n        res: undefined,\n        items: [],\n      };\n    }\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        login,\n        signup,\n        userName,\n        token,\n        checkUser,\n        logout,\n        showSidebar,\n        setShowSidebar,\n        mobileView,\n        checkMobile,\n        fetchAll,\n        showNewOrderModal,\n        setShowNewOrderModal,\n        clients,\n        setClients,\n        orders,\n        setOrders,\n        createOrder,\n        createClient,\n        navigate,\n        deleteItem,\n        updateItems,\n        showEditClientModal,\n        setShowEditClientModal,\n        clientToEdit,\n        setClientToEdit,\n        showSpinner,\n        setShowSpinner,\n        editItem,\n        createPayment,\n        createShipping,\n        showEditOrderModal,\n        setShowEditOrderModal,\n        orderToEdit,\n        setOrderToEdit,\n        ordersToFetch,\n        setOrdersToFetch,\n        showShippingInfo,\n        setShowShippingInfo,\n        showPayments,\n        setShowPayments,\n        showSearchModal,\n        setShowSearchModal,\n        searchOrders,\n        generateURL,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { Context, Provider };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../Context/AppContext\";\nimport \"./header.scss\";\n\nfunction Header() {\n  const handleClick = () => setShowSidebar(!showSidebar);\n  const {\n    userName,\n    logout,\n    showSidebar,\n    setShowSidebar,\n    mobileView,\n    setShowSearchModal,\n    setShowNewOrderModal,\n  } = React.useContext(Context);\n\n  return (\n    <header className=\"container-fluid p-0\">\n      <div className=\"header-container w-100 header d-flex align-items-center justify-content-between px-4\">\n        {mobileView && (\n          <Link to=\"/\">\n            <i className=\"bi bi-journal-code fs-1\"></i>\n          </Link>\n        )}\n        <nav\n          className={\n            \"navbar \" +\n            (mobileView ? \"flex-column justify-content-start \" : \"\") +\n            (showSidebar ? \"active\" : \"\")\n          }\n        >\n          {!mobileView && (\n            <Link to=\"/\">\n              <i className=\"bi bi-journal-code fs-1\"></i>\n            </Link>\n          )}\n          <ul className=\"user-links\">\n            {userName ? (\n              <React.Fragment>\n                <li className=\"fs-4\">\n                  <p className=\"m-0\">Hola {userName}</p>\n                </li>\n                <li className=\"login-link\">\n                  <Link\n                    to=\"/\"\n                    onClick={() => {\n                      setShowSidebar(false);\n                      logout();\n                    }}\n                  >\n                    Log out\n                  </Link>\n                </li>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <li className=\"login-link\">\n                  <Link to=\"/signup\" onClick={() => setShowSidebar(false)}>\n                    Sign up\n                  </Link>\n                </li>\n                <li className=\"login-link\">\n                  <Link to=\"/login\" onClick={() => setShowSidebar(false)}>\n                    Log in\n                  </Link>\n                  {/* // <Link to=\"/login\">Log in</Link> */}\n                </li>\n              </React.Fragment>\n            )}\n          </ul>\n          {userName && (\n            <ul className=\"nav-menu\">\n              <li>\n                <Link to=\"/dashboard/orders\">Orders</Link>\n              </li>\n              <li>\n                <Link to=\"/dashboard/clients\">Clients</Link>\n              </li>\n              <li>\n                <Link to=\"#\" onClick={() => setShowSearchModal(true)}>\n                  Search\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"#\"\n                  onClick={() => setShowNewOrderModal((value) => !value)}\n                >\n                  New Order\n                </Link>\n              </li>\n            </ul>\n          )}\n        </nav>\n        {mobileView && (\n          <div\n            className={\"menu-icon \" + (showSidebar ? \"rotate-45\" : \"\")}\n            onClick={handleClick}\n          >\n            <i\n              className={\"fs-1 \" + (showSidebar ? \"bi bi-plus\" : \"bi bi-list\")}\n            ></i>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport { Header };\n","import React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Welcome.scss\";\n\nfunction Welcome({ userName }) {\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (userName !== null) {\n      navigate(\"/dashboard\");\n    }\n  });\n  return (\n    <React.Fragment>\n      <div className=\"container justify-content-center mt-5\">\n        <h1 className=\"fs-1 text-center\">\n          Welcome to your daily order manager\n        </h1>\n        <div className=\"container login-container\">\n          <div className=\"row mt-5\">\n            <div className=\"col-10 offset-1 col-sm-4 offset-sm-1 col-lg-3 offset-lg-2 login-col mb-5\">\n              <h3>Are you new?</h3>\n              <Link to=\"/signup\">Sign up!</Link>\n            </div>\n            <div className=\"col-10 offset-1 col-sm-4 offset-sm-2 col-lg-3 offset-lg-2 login-col mb-5\">\n              <h3>Have an account?</h3>\n              <Link to=\"/login\">Log in!</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport { Welcome };\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../sign_up_forms.scss\";\n\nfunction Login({ login, userName }) {\n  const navigate = useNavigate();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const log = await login(\n      event.target.email.value,\n      event.target.password.value\n    );\n    if (log) {\n      navigate(\"/dashboard\");\n    }\n  };\n\n  React.useEffect(() => {\n    if (userName) {\n      navigate(\"/dashboard\");\n    }\n  });\n  // React.useLayoutEffect(() => {\n  //   if (userName) {\n  //     navigate(\"/dashboard\");\n  //   }\n  // });\n\n  return (\n    <React.Fragment>\n      <form className=\"container-sm mt-5\" onSubmit={onSubmit}>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-md-6 col-lg-5 align-items-center d-flex flex-column px-5 py-3 form-decorate\">\n            <div className=\"d-flex flex-column w-100 my-4\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                placeholder=\"juano@carrancho.com\"\n                name=\"email\"\n                required\n              />\n            </div>\n            <div className=\"d-flex flex-column w-100 my-4\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" required />\n            </div>\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Log In\n            </button>\n          </div>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport { Login };\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"../sign_up_forms.scss\";\n\nfunction Signup({ signup, userName }) {\n  const navigate = useNavigate();\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const log = await signup(\n      event.target.name.value,\n      event.target.email.value,\n      event.target.password.value\n    );\n    if (log) {\n      navigate(\"/dashboard\");\n    }\n  };\n\n  React.useEffect(() => {\n    if (userName) {\n      navigate(\"/dashboard\");\n    }\n  });\n\n  return (\n    <form className=\"container-sm mt-5\" onSubmit={onSubmit}>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-10 col-md-6 col-lg-5 align-items-center d-flex flex-column px-5 py-3 form-decorate\">\n          <div className=\"d-flex flex-column w-100 my-4\">\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"Text\" placeholder=\"Juano\" name=\"name\" required />\n          </div>\n          <div className=\"d-flex flex-column w-100 my-4\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"juano@carrancho.com\"\n              name=\"email\"\n              required\n            />\n          </div>\n          <div className=\"d-flex flex-column w-100 my-4\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" required />\n          </div>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Sign up\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport { Signup };\n","import React from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Context } from \"../../Context/AppContext\";\nimport \"./dashboard.scss\";\n\nfunction Dashboard() {\n  const colClass = `col-option col-8 offset-2 col-md-3 my-2 d-flex flex-column text-center py-4`;\n  const { userName, setShowNewOrderModal, setShowSearchModal } =\n    React.useContext(Context);\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    if (!userName) {\n      navigate(\"/login\");\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <div className=\"row pt-5\">\n          <div\n            className={`${colClass} offset-md-2`}\n            onClick={() => {\n              setShowNewOrderModal((value) => !value);\n            }}\n          >\n            <i className=\"bi bi-bag-plus-fill icon-option\"></i>\n            <p>New Order</p>\n          </div>\n          <div\n            className={`${colClass} offset-md-2`}\n            onClick={() => setShowSearchModal(true)}\n          >\n            <i className=\"bi bi-search icon-option\"></i>\n            <p> Search </p>\n          </div>\n          <div className={`${colClass} offset-md-2`}>\n            <Link to=\"/dashboard/orders\">\n              <i className=\"bi bi-journal-bookmark-fill icon-option\"></i>\n              <p> Orders </p>\n            </Link>\n          </div>\n          <div className={`${colClass} offset-md-2`}>\n            <Link to=\"/dashboard/clients\">\n              <i className=\"bi bi-person-lines-fill icon-option\"></i>\n              <p> Clients </p>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport { Dashboard };\n","import React, { useContext } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  useColumnOrder,\n  useAbsoluteLayout,\n  useBlockLayout,\n  useFlexLayout,\n} from \"react-table\";\n\nfunction Table({ columns, data, tableHooks, columnOrder }) {\n  const tableInstance = useTable(\n    {\n      columns: columns,\n      data: data,\n      initialState: {\n        columnOrder: columnOrder,\n      },\n    },\n    tableHooks,\n    useSortBy,\n    useColumnOrder,\n    // useAbsoluteLayout\n    // useBlockLayout\n    useFlexLayout\n  );\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  return (\n    <React.Fragment>\n      <div className=\"table-container\">\n        <table className=\"orderTable\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render(\"Header\")}\n                    {column.isSorted ? (column.isSortedDesc ? \" ▼\" : \" ▲\") : \"\"}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport { Table };\n","import React from \"react\";\nimport { Table } from \"../Table\";\nimport { Context } from \"../../Context/AppContext\";\n\nfunction Clients() {\n  const {\n    deleteItem,\n    updateItems,\n    clients,\n    setClients,\n    setShowEditClientModal,\n    generateURL,\n    setClientToEdit,\n    showSpinner,\n    navigate,\n    setOrdersToFetch,\n  } = React.useContext(Context);\n  React.useEffect(() => {\n    updateItems(generateURL(\"users\"), setClients);\n  }, []);\n\n  const data = React.useMemo(() => [...clients], [clients]);\n  const columns = React.useMemo(\n    () =>\n      clients[0]\n        ? Object.keys(clients[0]).map((key) => {\n            return { Header: key, accessor: key };\n          })\n        : [],\n    [clients]\n  );\n\n  const tableHooks = (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      ...columns,\n      {\n        id: \"Options\",\n        Header: \"Option\",\n        width: 300,\n        Cell: ({ row }) => (\n          <div className=\"button-cell\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setClientToEdit({\n                  id: row.values.id,\n                  name: row.values.name,\n                  lastName: row.values.last_name,\n                  govId: row.values.gov_id,\n                  email: row.values.email,\n                  company: row.values.company,\n                });\n                setShowEditClientModal(true);\n              }}\n            >\n              Edit\n            </button>\n            <button\n              className=\"btn btn-info\"\n              onClick={async () => {\n                setOrdersToFetch({\n                  title: row.values.name + \"'s Orders\",\n                });\n                navigate(\"dashboard/orders/\" + row.values.id);\n              }}\n            >\n              Orders\n            </button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={async () => {\n                deleteItem(row.values.id).then(() => {\n                  updateItems(generateURL(\"users\"), setClients);\n                });\n              }}\n            >\n              Delete\n            </button>\n          </div>\n        ),\n      },\n    ]);\n  };\n\n  return (\n    <>\n      {!showSpinner ? (\n        <>\n          <h1 className=\"h1 text-center mt-5\">All Clients</h1>\n          {clients[0] ? (\n            <Table\n              columns={columns}\n              data={data}\n              tableHooks={tableHooks}\n              columnOrder={[\n                \"id\",\n                \"name\",\n                \"last_name\",\n                \"email\",\n                \"gov_id\",\n                \"company\",\n              ]}\n            ></Table>\n          ) : (\n            <div className=\"container text-center pt-4\">\n              No Clients in the system\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"container text-center mt-5 fs-2\">\n          Clients comming ...\n        </div>\n      )}\n    </>\n  );\n}\n\nexport { Clients };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./ModalNew.scss\";\n\nconst ModalNew = ({ children, elementId, setShowModal }) => {\n  return ReactDOM.createPortal(\n    <>\n      <div className=\"background\">\n        <div className=\"container-fluid\">\n          <div className=\"row justify-content-center\">\n            <div className=\"modal-container col-11 col-md-6 px-0 popup\">\n              <div className=\"close\" onClick={() => setShowModal(false)}>\n                <i className=\"bi bi-plus-lg\"></i>\n              </div>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>,\n    document.getElementById(elementId)\n  );\n};\n\nexport { ModalNew };\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\nimport \"../inside_forms.scss\";\n\nconst NewOrder = () => {\n  const [deliverState, setDeliverState] = React.useState(false);\n  const {\n    setShowNewOrderModal,\n    clients,\n    setClients,\n    createOrder,\n    updateItems,\n    setShowSpinner,\n    createPayment,\n    createShipping,\n    generateURL,\n  } = React.useContext(Context);\n  const [clientType, setClientType] = React.useState(\"ExistingClient\");\n  const [payments, setPayments] = React.useState([]);\n  const [shipping, setShipping] = React.useState(false);\n  const [prices, setPrices] = React.useState({\n    subtotal: 0,\n    taxes: 0,\n    shipping: 0,\n    payment: 0,\n  });\n\n  React.useEffect(() => {\n    const newPrices = { ...prices };\n    newPrices.payment = payments.reduce(\n      (total, payment) => total + payment.total,\n      0\n    );\n    setPrices(newPrices);\n  }, [payments]);\n\n  const checkDebth = () =>\n    prices.subtotal + prices.taxes + prices.shipping - prices.payment > 0;\n\n  const handleDeliver = () => {\n    if (checkDebth()) {\n      setDeliverState(false);\n    } else {\n      setDeliverState(!deliverState);\n    }\n  };\n\n  React.useEffect(() => {\n    if (checkDebth()) {\n      setDeliverState(false);\n    }\n  }, [prices]);\n\n  const updatePrices = (value, price) => {\n    const newPrices = { ...prices };\n    newPrices[price] = isNaN(value) ? 0 : value;\n    setPrices(newPrices);\n  };\n  const updatePaymentType = (type, pIdx) => {\n    const newPayment = [...payments];\n    newPayment[pIdx].type = type;\n    setPayments(newPayment);\n  };\n  const updatePaymentTotal = (total, pIdx) => {\n    const newPayment = [...payments];\n    newPayment[pIdx].total = isNaN(total) ? 0 : total;\n    setPayments(newPayment);\n  };\n\n  const addPayment = (event) => {\n    event.preventDefault();\n    setPayments([...payments, { type: \"Credit Cart\", total: 0 }]);\n  };\n  const removePayment = (event) => {\n    event.preventDefault();\n    const newPayment = [...payments];\n    newPayment.pop();\n    setPayments(newPayment);\n  };\n\n  React.useEffect(() => {\n    updateItems(generateURL(\"users\"), setClients);\n  }, []);\n\n  const orderSubmited = async (event) => {\n    event.preventDefault();\n    setShowSpinner(true);\n    const form = event.target;\n    const paid = !checkDebth();\n    const subtotal = form.subtotal.value === \"\" ? 0 : form.subtotal.value;\n    const taxes = form.taxes.value === \"\" ? 0 : form.taxes.value;\n    let client_id;\n    let client;\n    if (form.clienttype.value === \"ExistingClient\") {\n      client_id = form.client.value;\n      client = false;\n    } else {\n      const name = form.name.value;\n      const lastname = form.lastname.value;\n      const govid = form.govid.value;\n      const email = form.email.value;\n      const company = form.company.value;\n      client = { name, lastname, govid, email, company };\n      client_id = null;\n    }\n    const res = await createOrder(client, {\n      subtotal,\n      taxes,\n      client_id,\n      paid,\n    });\n    let orderId;\n    if (res.state === true) {\n      orderId = res.order.id;\n    } else {\n      alert(res.msg);\n    }\n    payments.forEach((payment) => {\n      createPayment({\n        type: payment.type,\n        total: payment.total,\n        order_id: orderId,\n      });\n    });\n    if (shipping) {\n      createShipping({\n        order_id: orderId,\n        address: form.address.value,\n        city: form.city.value,\n        state: form.state.value,\n        country: form.country.value,\n        cost: form.cost.value === \"\" ? 0 : form.cost.value,\n        delivered: form.delivered.checked,\n      });\n    }\n    setShowNewOrderModal(false);\n    setShowSpinner(false);\n  };\n\n  return (\n    <React.Fragment>\n      <h2 className=\"form-title\">New Order</h2>\n      <form className=\"form-style\" onSubmit={(event) => orderSubmited(event)}>\n        <div className=\"grid-input\">\n          <label htmlFor=\"clienttype\">Order:</label>\n          <select\n            name=\"clienttype\"\n            id=\"clienttype\"\n            onClick={(event) => setClientType(event.target.value)}\n          >\n            <option value=\"ExistingClient\">Existing Client</option>\n            <option value=\"NewClient\">New Client</option>\n          </select>\n        </div>\n        <div className=\"group-form\">\n          {clientType === \"NewClient\" ? (\n            <>\n              <div>\n                <label htmlFor=\"name\">Name:</label>\n                <input type=\"text\" name=\"name\" required />\n              </div>\n              <div>\n                <label htmlFor=\"lastname\">Last Name:</label>\n                <input type=\"text\" name=\"lastname\" />\n              </div>\n              <div>\n                <label htmlFor=\"govid\">Gov Id:</label>\n                <input type=\"text\" name=\"govid\" required />\n              </div>\n              <div>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"text\" name=\"email\" />\n              </div>\n              <div>\n                <label htmlFor=\"company\">Company</label>\n                <input type=\"text\" name=\"company\" />\n              </div>\n            </>\n          ) : (\n            <div>\n              <label htmlFor=\"client\">Client</label>\n              <select name=\"client\" id=\"client\" required>\n                {clients.length > 0 &&\n                  clients.map((client) => (\n                    <option key={client.id} value={client.id}>\n                      {client.id + \" \" + client.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          )}\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"subtotal\">Subtotal: $</label>\n          <input\n            type=\"number\"\n            name=\"subtotal\"\n            onChange={(event) =>\n              updatePrices(parseInt(event.target.value), \"subtotal\")\n            }\n          />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"taxes\">Taxes: $</label>\n          <input\n            type=\"number\"\n            name=\"taxes\"\n            onChange={(event) =>\n              updatePrices(parseInt(event.target.value), \"taxes\")\n            }\n          />\n        </div>\n        <div className=\"payments-container\">\n          <div>\n            <button\n              className=\"btn btn-ligth payment-button\"\n              onClick={(event) => {\n                addPayment(event);\n              }}\n            >\n              Add Payment\n            </button>\n            <button\n              className=\"btn btn-ligth payment-button\"\n              onClick={(event) => {\n                removePayment(event);\n              }}\n            >\n              Remove Payment\n            </button>\n          </div>\n          {payments.map((payment, pIdx) => (\n            <div key={\"payment\" + pIdx} className=\"group-form\">\n              <div>\n                <label htmlFor={pIdx + \"paymenttype\"}>\n                  Payment {pIdx + 1}:{\" \"}\n                </label>\n                <select\n                  name={pIdx + \"paymenttype\"}\n                  id=\"paymenttype\"\n                  onClick={(event) => {\n                    updatePaymentType(event.target.value, pIdx);\n                  }}\n                >\n                  <option value=\"Credit Cart\">Credit cart</option>\n                  <option value=\"Cash\">Cash</option>\n                </select>\n              </div>\n              <div>\n                <label htmlFor={pIdx + \"paymenttotal\"}>Total: </label>\n                <input\n                  type=\"number\"\n                  name={pIdx + \"paymenttotal\"}\n                  onChange={(event) => {\n                    updatePaymentTotal(parseInt(event.target.value), pIdx);\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"enableshipping\">Ship ?</label>\n          <input\n            className=\"w-auto\"\n            type=\"checkbox\"\n            name=\"enableshipping\"\n            onChange={(event) => {\n              setShipping(event.target.checked);\n            }}\n          />\n        </div>\n        {shipping && (\n          <div className=\"group-form\">\n            <div>\n              <label htmlFor=\"address\">Address:</label>\n              <input type=\"text\" name=\"address\" />\n            </div>\n            <div>\n              <label htmlFor=\"city\">City:</label>\n              <input type=\"text\" name=\"city\" />\n            </div>\n            <div>\n              <label htmlFor=\"State\">State:</label>\n              <input type=\"text\" name=\"state\" />\n            </div>\n            <div>\n              <label htmlFor=\"country\">Country:</label>\n              <input type=\"text\" name=\"country\" />\n            </div>\n            <div>\n              <label htmlFor=\"cost\">Cost: $</label>\n              <input\n                type=\"number\"\n                name=\"cost\"\n                onChange={(event) =>\n                  updatePrices(parseInt(event.target.value), \"shipping\")\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor=\"delivered\">Deliver:</label>\n              <input\n                className=\"w-auto\"\n                type=\"checkbox\"\n                name=\"delivered\"\n                checked={deliverState}\n                onClick={handleDeliver}\n                disabled={checkDebth()}\n              />\n            </div>\n          </div>\n        )}\n        <button className=\"btn btn-primary btn-form\" type=\"submit\">\n          Create Order\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport { NewOrder };\n","import React, { useState } from \"react\";\nimport \"./test.scss\";\nexport function Test() {\n  return <div>hola</div>;\n}\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\n\nexport const ModalEditClient = () => {\n  const {\n    generateURL,\n    clientToEdit,\n    editItem,\n    setShowSpinner,\n    updateItems,\n    setClients,\n  } = React.useContext(Context);\n  const [msg, setMsg] = React.useState(null);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"form-title\">Edit Client</h2>\n      <form\n        className=\"form-style\"\n        onSubmit={async (event) => {\n          event.preventDefault();\n          setMsg(null);\n          setShowSpinner(true);\n          const res = await editItem(\n            {\n              client_id: event.target.id.value,\n              name: event.target.name.value,\n              last_name: event.target.lastname.value,\n              gov_id: event.target.govid.value,\n              email: event.target.email.value,\n              company: event.target.company.value,\n            },\n            \"updateclient\"\n          );\n          setMsg(res.msg);\n          updateItems(generateURL(\"users\"), setClients);\n          setShowSpinner(false);\n        }}\n      >\n        <div className=\"grid-input\">\n          <label htmlFor=\"id\">Client Id:</label>\n          <input\n            className=\"client-id\"\n            defaultValue={clientToEdit.id}\n            type=\"text\"\n            name=\"id\"\n            readOnly\n          />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            defaultValue={clientToEdit.name}\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"lastname\">Last Name:</label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            defaultValue={clientToEdit.lastName}\n          />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"govid\">Gov Id:</label>\n          <input type=\"text\" name=\"govid\" defaultValue={clientToEdit.govId} />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"text\" name=\"email\" defaultValue={clientToEdit.email} />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"company\">Company</label>\n          <input\n            type=\"text\"\n            name=\"company\"\n            defaultValue={clientToEdit.company}\n          />\n        </div>\n        {msg && <p style={{ color: \"green\" }}>{msg}</p>}\n        <button className=\"btn btn-primary btn-form\" type=\"submit\">\n          Update Client\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\n\nexport const ModalEditOrder = () => {\n  const {\n    ordersToFetch,\n    orderToEdit,\n    editItem,\n    setShowSpinner,\n    updateItems,\n    setOrders,\n  } = React.useContext(Context);\n  const [msg, setMsg] = React.useState(null);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"form-title\">Edit Order</h2>\n      <form\n        className=\"form-style\"\n        onSubmit={async (event) => {\n          event.preventDefault();\n          setMsg(null);\n          setShowSpinner(true);\n          const res = await editItem(\n            {\n              order_id: event.target.order_id.value,\n              subtotal: event.target.subtotal.value,\n              taxes: event.target.taxes.value,\n            },\n            \"updateorder\"\n          );\n          setMsg(res.msg);\n          debugger;\n          updateItems(ordersToFetch.url, setOrders);\n          setShowSpinner(false);\n        }}\n      >\n        <div className=\"grid-input\">\n          <label htmlFor=\"order_id\">order Id:</label>\n          <input\n            className=\"form-id\"\n            defaultValue={orderToEdit.order_id}\n            type=\"text\"\n            name=\"order_id\"\n            readOnly\n          />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"subtotal\">Subtotal: $</label>\n          <input\n            defaultValue={orderToEdit.subtotal}\n            type=\"number\"\n            name=\"subtotal\"\n            required\n          />\n        </div>\n        <div className=\"grid-input\">\n          <label htmlFor=\"taxes\">Taxes: $</label>\n          <input type=\"number\" name=\"taxes\" defaultValue={orderToEdit.taxes} />\n        </div>\n        {msg && <p style={{ color: \"green\" }}>{msg}</p>}\n        <button className=\"btn btn-primary btn-form\" type=\"submit\">\n          Update Order\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./LoadingSpinner.scss\";\n\nexport const LoadingSpinner = () => {\n  return ReactDOM.createPortal(\n    <div className=\"spinner-background\">\n      <div className=\"spinner\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>,\n    document.getElementById(\"loading-modal\")\n  );\n};\n","import React from \"react\";\nimport { Table } from \"../../Table\";\nimport { Context } from \"../../../Context/AppContext\";\n\nfunction Orders() {\n  const {\n    orders,\n    deleteItem,\n    showSpinner,\n    updateItems,\n    setOrders,\n    setShowEditOrderModal,\n    setOrderToEdit,\n    ordersToFetch,\n    setShowShippingInfo,\n    setShowPayments,\n  } = React.useContext(Context);\n\n  const data = React.useMemo(() => [...orders], [orders]);\n  const columns = React.useMemo(\n    () =>\n      orders[0]\n        ? Object.keys(orders[0])\n            .filter(\n              (key) =>\n                key !== \"shipping_info\" &&\n                key !== \"user_information\" &&\n                key !== \"paid\" &&\n                key !== \"payments\"\n            )\n            .map((key) => {\n              let width = 150;\n              if ([\"subtotal\", \"taxes\", \"total\"].includes(key)) width = 80;\n              if ([\"gov_id\", \"order_status\"].includes(key)) width = 100;\n              return { Header: key, accessor: key, width: width };\n            })\n        : [],\n    [orders]\n  );\n\n  const tableHooks = (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      ...columns,\n      {\n        id: \"Options\",\n        Header: \"Options\",\n        width: 300,\n        Cell: ({ row }) => (\n          <div className=\"button-cell\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setOrderToEdit(\n                  orders.filter(\n                    (order) => order.order_id === row.values.order_id\n                  )[0]\n                );\n                setShowEditOrderModal(true);\n              }}\n            >\n              Edit\n            </button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={async () => {\n                deleteItem(row.values.order_id).then(() => {\n                  updateItems(ordersToFetch.url, setOrders);\n                });\n              }}\n            >\n              Delete\n            </button>\n            <button\n              className=\"btn btn-info\"\n              onClick={() => {\n                setOrderToEdit(\n                  orders.filter(\n                    (order) => order.order_id === row.values.order_id\n                  )[0]\n                );\n                setShowShippingInfo(true);\n              }}\n            >\n              Shipping\n            </button>\n            <button\n              className=\"btn btn-info\"\n              onClick={() => {\n                setOrderToEdit(\n                  orders.filter(\n                    (order) => order.order_id === row.values.order_id\n                  )[0]\n                );\n                setShowPayments(true);\n              }}\n            >\n              Payments\n            </button>\n          </div>\n        ),\n      },\n    ]);\n  };\n\n  return (\n    <>\n      {!showSpinner ? (\n        <>\n          <h1 className=\"h1 text-center mt-5\">{ordersToFetch.title}</h1>\n          {orders[0] ? (\n            <Table\n              columns={columns}\n              data={data}\n              tableHooks={tableHooks}\n              columnOrder={[\n                \"order_id\",\n                \"customer_name\",\n                \"gov_id\",\n                \"subtotal\",\n                \"taxes\",\n                \"total\",\n              ]}\n            ></Table>\n          ) : (\n            <div className=\"container text-center pt-4\">\n              No orders in the system\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"container text-center mt-5 fs-2\">\n          Orders comming ...\n        </div>\n      )}\n    </>\n  );\n}\n\nexport { Orders };\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\nimport { Orders } from \"../Orders\";\n\nexport const AllOrders = () => {\n  const { generateURL, setOrdersToFetch, updateItems, setOrders } =\n    React.useContext(Context);\n  React.useEffect(() => {\n    const url = generateURL(\"orders\");\n    setOrdersToFetch({ url: url, title: \"All Orders\" });\n    updateItems(url, setOrders);\n  }, []);\n  return <Orders></Orders>;\n};\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\nimport { Orders } from \"../Orders\";\nimport { useParams } from \"react-router-dom\";\n\nexport const ClientOrders = () => {\n  const { generateURL, setOrdersToFetch, setOrders, updateItems } =\n    React.useContext(Context);\n  const { clientId } = useParams();\n  React.useEffect(() => {\n    const url = generateURL(\"orders/user/\" + clientId);\n    setOrdersToFetch((orders) => {\n      orders.url = url;\n      return orders;\n    });\n    updateItems(url, setOrders);\n  }, []);\n  return <Orders></Orders>;\n};\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\n\nexport const FormEditShipping = ({ shipping_info, action }) => {\n  const {\n    ordersToFetch,\n    editItem,\n    setShowSpinner,\n    updateItems,\n    setOrders,\n    createShipping,\n    orderToEdit,\n    setOrderToEdit,\n    orders,\n  } = React.useContext(Context);\n  const [msg, setMsg] = React.useState(null);\n\n  const submitShipping = async (event) => {\n    event.preventDefault();\n    setMsg(null);\n    setShowSpinner(true);\n    const shipping = {\n      shipping_id: shipping_info.id,\n      order_id: orderToEdit.order_id,\n      address: event.target.address.value,\n      city: event.target.city.value,\n      state: event.target.state.value,\n      country: event.target.country.value,\n      cost: event.target.cost.value === \"\" ? 0 : event.target.cost.value,\n      delivered: event.target.delivered.checked,\n    };\n    let res;\n    if (action === \"edit\") {\n      res = await editItem(shipping, \"updateshipping\");\n    } else if (action === \"create\") {\n      res = await createShipping(shipping);\n    }\n    setMsg(res.msg);\n    updateItems(ordersToFetch.url, setOrders);\n    setShowSpinner(false);\n  };\n\n  React.useEffect(() => {\n    const newOrder = orders.filter(\n      (order) => order.order_id === orderToEdit.order_id\n    )[0];\n    setOrderToEdit(\n      orders.filter((order) => order.order_id === orderToEdit.order_id)[0]\n    );\n  }, [orders]);\n\n  React.useEffect(() => {\n    console.log(\"in shipping form the order to edit now is \", orderToEdit);\n  }, [orderToEdit]);\n\n  return (\n    <form className=\"form-style\" onSubmit={(event) => submitShipping(event)}>\n      <div className=\"grid-input\">\n        <label htmlFor=\"address\">Address:</label>\n        <input\n          defaultValue={shipping_info.address}\n          type=\"text\"\n          name=\"address\"\n        />\n      </div>\n      <div className=\"grid-input\">\n        <label htmlFor=\"city\">City:</label>\n        <input defaultValue={shipping_info.city} type=\"text\" name=\"city\" />\n      </div>\n      <div className=\"grid-input\">\n        <label htmlFor=\"state\">State:</label>\n        <input defaultValue={shipping_info.state} type=\"text\" name=\"state\" />\n      </div>\n      <div className=\"grid-input\">\n        <label htmlFor=\"country\">Country:</label>\n        <input\n          defaultValue={shipping_info.country}\n          type=\"text\"\n          name=\"country\"\n        />\n      </div>\n      <div className=\"grid-input\">\n        <label htmlFor=\"cost\">Cost: $</label>\n        <input defaultValue={shipping_info.cost} type=\"number\" name=\"cost\" />\n      </div>\n      <div className=\"grid-input\">\n        <label htmlFor=\"delivered\">Delivered:</label>\n        <input\n          defaultChecked={shipping_info.delivered}\n          type=\"checkbox\"\n          name=\"delivered\"\n        />\n      </div>\n      {msg && <p style={{ color: \"green\" }}>{msg}</p>}\n      <button className=\"btn btn-primary btn-form\" type=\"submit\">\n        Update Info\n      </button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { Context } from \"../../Context/AppContext\";\nimport { FormEditShipping } from \"./FormEditShipping\";\n\nexport const ShippingInfo = () => {\n  const { orderToEdit, orders } = React.useContext(Context);\n  const [addShippingInfo, setAddShippingInfo] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"form-title\">Shipping Info</h2>\n      {orderToEdit.shipping_info ? (\n        <>\n          <FormEditShipping\n            shipping_info={orderToEdit.shipping_info}\n            action=\"edit\"\n          ></FormEditShipping>\n        </>\n      ) : (\n        <>\n          {!addShippingInfo ? (\n            <div className=\"form-style\">\n              <p>No shipping Info</p>\n              <button\n                className=\"btn btn-primary btn-form\"\n                onClick={() => {\n                  setAddShippingInfo(true);\n                }}\n              >\n                Add Shipping Info\n              </button>\n            </div>\n          ) : (\n            <>\n              <FormEditShipping\n                shipping_info={{}}\n                action=\"create\"\n              ></FormEditShipping>\n            </>\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Context } from \"../../Context/AppContext\";\nimport { Table } from \"../Table\";\nimport \"./payments.scss\";\n\nexport const Payments = () => {\n  const {\n    orderToEdit,\n    setShowSpinner,\n    ordersToFetch,\n    setOrders,\n    orders,\n    setOrderToEdit,\n    createPayment,\n    updateItems,\n  } = React.useContext(Context);\n  const [addingPayment, setAddingPayment] = React.useState(false);\n  const data = React.useMemo(() => [...orderToEdit.payments], [orderToEdit]);\n  const columns = React.useMemo(\n    () =>\n      orderToEdit.payments[0]\n        ? Object.keys(orderToEdit.payments[0]).map((key) => {\n            let width = 150;\n            let header = key;\n            if (key === \"total\") {\n              width = 80;\n            }\n            if (key === \"_type\") {\n              header = \"type\";\n              width = 100;\n            }\n            return { Header: header, accessor: key, width: width };\n          })\n        : [],\n    [orderToEdit]\n  );\n\n  const tableHooks = (hooks) => {\n    hooks.visibleColumns.push((columns) => [...columns]);\n  };\n\n  const submitPayment = async (event) => {\n    event.preventDefault();\n    setShowSpinner(true);\n    await createPayment({\n      type: event.target.paymenttype.value,\n      total: event.target.paymenttotal.value,\n      order_id: orderToEdit.order_id,\n    });\n    updateItems(ordersToFetch.url, setOrders);\n    setAddingPayment(false);\n    setShowSpinner(false);\n  };\n  React.useEffect(() => {\n    setOrderToEdit(\n      orders.filter((order) => order.order_id === orderToEdit.order_id)[0]\n    );\n  }, [orders]);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"form-title\">Payments</h2>\n      {orderToEdit.payments[0] ? (\n        <div className=\"payments-container m-2\">\n          <Table columns={columns} data={data} tableHooks={tableHooks}></Table>\n        </div>\n      ) : (\n        <p className=\"mx-2 text-center\">There are no payments yet</p>\n      )}\n      {addingPayment ? (\n        <form\n          className=\"form-style\"\n          onSubmit={(event) => {\n            submitPayment(event);\n          }}\n        >\n          <div className=\"group-form\">\n            <div>\n              <label htmlFor=\"paymenttype\">Payment: </label>\n              <select name=\"paymenttype\" required>\n                <option value=\"Credit Cart\">Credit cart</option>\n                <option value=\"Cash\">Cash</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"paymenttotal\">Total: </label>\n              <input\n                type=\"number\"\n                name=\"paymenttotal\"\n                required\n                // onChange={(event) => {\n                //   updatePaymentTotal(parseInt(event.target.value));\n                // }}\n              />\n            </div>\n          </div>\n          <button type=\"submit\">Add Payment</button>\n        </form>\n      ) : (\n        <button\n          className=\"btn btn-primary mx-auto mb-2\"\n          onClick={() => setAddingPayment(true)}\n        >\n          Add Payment\n        </button>\n      )}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Context } from \"../../../Context/AppContext\";\nimport \"./SearchModal.scss\";\n\nexport const SearchModal = () => {\n  const [searchType, setSearchType] = React.useState(\"by-id\");\n  const { searchOrders, setShowSpinner } = React.useContext(Context);\n\n  const submitSearch = (event) => {\n    event.preventDefault();\n    setShowSpinner(true);\n    // debugger;\n    searchOrders(searchType, {\n      orderId: event.target.orderId.value,\n      startDate: event.target.startDate.value,\n      endDate: event.target.endDate.value,\n      city: event.target.city.value,\n      state: event.target.state.value,\n      country: event.target.country.value,\n    });\n    setShowSpinner(false);\n  };\n\n  return (\n    <>\n      <h2 className=\"form-title\">Search</h2>\n      <form className=\"search-form\" onSubmit={(event) => submitSearch(event)}>\n        <div className=\"accordion w-100 accordion-flus\" id=\"accordion-search\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button\n                className=\"accordion-button\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseOne\"\n                aria-expanded=\"true\"\n                aria-controls=\"collapseOne\"\n                onClick={() => setSearchType(\"by-id\")}\n              >\n                Search order by id\n              </button>\n            </h2>\n            <div\n              id=\"collapseOne\"\n              className=\"accordion-collapse collapse show\"\n              aria-labelledby=\"headingOne\"\n              data-bs-parent=\"#accordion-search\"\n            >\n              <div className=\"accordion-body\">\n                <div className=\"search-input grid-input\">\n                  <label htmlFor=\"orderId\">Order Id:</label>\n                  <input\n                    type=\"text\"\n                    name=\"orderId\"\n                    required={searchType === \"by-id\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseTwo\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseTwo\"\n                onClick={() => setSearchType(\"by-date\")}\n              >\n                Search orders by dates\n              </button>\n            </h2>\n            <div\n              id=\"collapseTwo\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingTwo\"\n              data-bs-parent=\"#accordion-search\"\n            >\n              <div className=\"accordion-body\">\n                <div className=\"search-input grid-input\">\n                  <label htmlFor=\"startDate\">Start Date:</label>\n                  <input\n                    type=\"date\"\n                    name=\"startDate\"\n                    required={searchType === \"by-date\"}\n                  />\n                </div>\n                <div className=\"search-input grid-input\">\n                  <label htmlFor=\"endDate\">End Date:</label>\n                  <input\n                    type=\"date\"\n                    name=\"endDate\"\n                    required={searchType === \"by-date\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingThree\">\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseThree\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseThree\"\n                onClick={() => setSearchType(\"by-location\")}\n              >\n                Search Orders by location\n              </button>\n            </h2>\n            <div\n              id=\"collapseThree\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingThree\"\n              data-bs-parent=\"#accordion-search\"\n            >\n              <div className=\"accordion-body\">\n                <div className=\"search-input grid-input\">\n                  <label htmlFor=\"country\">Country: </label>\n                  <input type=\"text\" name=\"country\" />\n                </div>\n                <div className=\"search-input grid-input\">\n                  <label htmlFor=\"state\">State: </label>\n                  <input type=\"text\" name=\"state\" />\n                </div>\n                <div className=\"search-input grid-input\">\n                  <label htmlFor=\"city\">City: </label>\n                  <input type=\"text\" name=\"city\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary m-2\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n","import \"./App.scss\";\nimport { Header } from \"./Header\";\nimport { Welcome } from \"./Welcome\";\nimport { Login } from \"./Forms/Login\";\nimport { Signup } from \"./Forms/Signup\";\nimport { Routes, Route } from \"react-router-dom\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../Context/AppContext\";\nimport { Dashboard } from \"./Dashboard\";\nimport { Clients } from \"./Clients\";\nimport { ModalNew } from \"./ModalNew\";\nimport { NewOrder } from \"./Forms/NewOrder\";\nimport { Test } from \"./test\";\nimport { ModalEditClient } from \"./Forms/ModalEditClient\";\nimport { ModalEditOrder } from \"./Forms/ModalEditOrder\";\nimport { LoadingSpinner } from \"./LoadingSpinner\";\nimport { AllOrders } from \"./Orders/AllOrders\";\nimport { ClientOrders } from \"./Orders/ClientOrders\";\nimport { ShippingInfo } from \"./ShippingInfo\";\nimport { Payments } from \"./Payments\";\nimport { SearchModal } from \"./Forms/SearchModal\";\nimport { Orders } from \"./Orders/Orders\";\nimport { Navigate } from \"react-router-dom\";\n\nconst App = () => {\n  const {\n    userName,\n    login,\n    checkUser,\n    signup,\n    showNewOrderModal,\n    setShowNewOrderModal,\n    showEditClientModal,\n    setShowEditClientModal,\n    showSpinner,\n    showEditOrderModal,\n    setShowEditOrderModal,\n    showShippingInfo,\n    setShowShippingInfo,\n    showPayments,\n    setShowPayments,\n    showSearchModal,\n    setShowSearchModal,\n  } = useContext(Context);\n\n  React.useEffect(() => {\n    checkUser();\n  });\n\n  return (\n    <React.Fragment>\n      <Header></Header>\n      <div className=\"body-container\">\n        <Routes>\n          <Route path=\"/\" element={<Welcome userName={userName} />}></Route>\n          <Route\n            path=\"/Order_Manager_frontend/\"\n            element={<Navigate replace to=\"/\"></Navigate>}\n          ></Route>\n          <Route\n            path=\"/login\"\n            element={<Login login={login} userName={userName} />}\n          ></Route>\n          <Route\n            path=\"/signup\"\n            element={<Signup signup={signup} userName={userName} />}\n          ></Route>\n          <Route\n            path=\"/dashboard\"\n            element={\n              <Dashboard\n                userName={userName}\n                setShowNewOrderModal={setShowNewOrderModal}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/dashboard/orders\"\n            element={<AllOrders></AllOrders>}\n          ></Route>\n          <Route\n            path=\"/dashboard/orders/:clientId\"\n            element={<ClientOrders />}\n          ></Route>\n          <Route\n            path=\"/dashboard/clients\"\n            element={<Clients></Clients>}\n          ></Route>\n          <Route\n            path=\"/loading\"\n            element={<LoadingSpinner></LoadingSpinner>}\n          ></Route>\n          <Route path=\"/test\" element={<Test></Test>}></Route>\n          <Route path=\"/search\" element={<Orders></Orders>}></Route>\n        </Routes>\n      </div>\n      {showNewOrderModal && (\n        <ModalNew\n          setShowModal={setShowNewOrderModal}\n          elementId={\"new-order-modal\"}\n        >\n          <NewOrder></NewOrder>\n        </ModalNew>\n      )}\n      {showEditClientModal && (\n        <ModalNew\n          setShowModal={setShowEditClientModal}\n          elementId={\"edit-client-modal\"}\n        >\n          <ModalEditClient></ModalEditClient>\n        </ModalNew>\n      )}\n      {showEditOrderModal && (\n        <ModalNew\n          setShowModal={setShowEditOrderModal}\n          elementId={\"edit-order-modal\"}\n        >\n          <ModalEditOrder></ModalEditOrder>\n        </ModalNew>\n      )}\n      {showShippingInfo && (\n        <ModalNew\n          setShowModal={setShowShippingInfo}\n          elementId={\"shipping-info-modal\"}\n        >\n          <ShippingInfo></ShippingInfo>\n        </ModalNew>\n      )}\n      {showPayments && (\n        <ModalNew setShowModal={setShowPayments} elementId={\"payments-modal\"}>\n          <Payments></Payments>\n        </ModalNew>\n      )}\n      {showSearchModal && (\n        <ModalNew setShowModal={setShowSearchModal} elementId={\"search-modal\"}>\n          <SearchModal></SearchModal>\n        </ModalNew>\n      )}\n      {showSpinner && <LoadingSpinner></LoadingSpinner>}\n    </React.Fragment>\n  );\n};\n\nexport { App };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"./Context/AppContext\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}